<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>repox-server</artifactId>
		<groupId>repox</groupId>
		<version>3.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<name>REPOX-SERVER-REST</name>
	<artifactId>repox-server-rest</artifactId>
	<packaging>war</packaging>

	<organization>
		<name>Instituto Superior TÃ©cnico</name>
		<url>http://www.ist.utl.pt</url>
	</organization>

	<contributors>
		<contributor>
			<name>The European Library</name>
			<url>http://www.theeuropeanlibrary.org</url>
		</contributor>
	</contributors>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<!-- <warSourceDirectory>WebContent</warSourceDirectory> -->
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<!-- <failOnMissingWebXml>false</failOnMissingWebXml> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-shared-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
							<includeArtifacIds>repox-resources</includeArtifacIds>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<excludeTransitive>true</excludeTransitive>
							<!-- use as much as needed to be specific...also scope,type,classifier 
								etc -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<!-- Boilerplate code for bypassing maven(bugs) errors that are produced from 
			exlipse for phases and goals -->
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.0,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- The development profile is only used while development and what it 
			really does is copy the needed property files from the classes folder to 
			the default maven resources folder so it can be deployed in eclipse for testing -->
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>src/main/resources</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</directory>
											<filtering>true</filtering>
											<includes>
												<include>configuration.properties</include>
												<include>gui.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>repox</groupId>
			<artifactId>repox-resources</artifactId>
			<classifier>resources</classifier>
			<type>zip</type>
			<!-- Make sure this isn't included on any classpath -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<!-- <version>2.5</version> -->
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>