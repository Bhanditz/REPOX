<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>repox</groupId>
		<artifactId>repox-server</artifactId>
		<version>2.6.0-SNAPSHOT</version>
	</parent>

	<name>REPOX-SERVER-REST-JERSEY</name>
	<artifactId>repox-server-rest-jersey</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<!-- <failOnMissingWebXml>false</failOnMissingWebXml> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-shared-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<!-- Use as much as needed to be specific or else it will unpack dependencies 
								that are not needed...also scope,type,classifier etc -->
							<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
							<includeArtifacIds>repox-resources</includeArtifacIds>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<includeClassifiers>resources</includeClassifiers>
							<includeTypes>zip</includeTypes>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- The development profile is only used while development and what it 
			really does is copy the needed property files from the classes folder to 
			the default maven resources folder so it can be deployed in an IDE(ex. eclipse) 
			for testing -->
		<profile>
			<id>copy-resources</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>src/main/resources</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</directory>
											<filtering>true</filtering>
											<includes>
												<include>configuration.properties</include>
												<include>gui.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- Use the below profile to clean resources folder the copy-resources 
			was used before -->
		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/resources</directory>
									<includes>
										<include>configuration.properties</include>
										<include>gui.properties</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>2.13</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Copy reosurces for accessing the repox sercies -->
		<dependency>
			<groupId>repox</groupId>
			<artifactId>repox-resources</artifactId>
			<classifier>resources</classifier>
			<type>zip</type>
			<!-- Make sure this isn't included on any classpath -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>

		<!-- (Un)Marshal for JSON -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3</version>
		</dependency>

		<!-- Media types support -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
