{
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "basePath" : "http://localhost:8080/repox/rest",
  "resourcePath" : "/harvest",
  "apis" : [ {
    "path" : "/datasets/{datasetId}/harvest/start",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Initiate a new harvest.",
      "notes" : "",
      "type" : "string",
      "nickname" : "startHarvest",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "datasetId",
        "description" : "Id of dataset",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "type",
        "description" : "full|sample",
        "defaultValue" : "sample",
        "required" : false,
        "type" : "string",
        "paramType" : "query",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 409,
        "message" : "AlreadyExistsException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/datasets/{datasetId}/harvest/cancel",
    "operations" : [ {
      "method" : "DELETE",
      "summary" : "Cancels a harvesting ingest.",
      "notes" : "",
      "type" : "string",
      "nickname" : "cancelHarvest",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "datasetId",
        "description" : "Id of dataset",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/datasets/{datasetId}/harvest/schedule",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Schedules an automatic harvesting.",
      "notes" : "",
      "type" : "string",
      "nickname" : "scheduleHarvest",
      "produces" : [ "application/json", "application/xml" ],
      "consumes" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "datasetId",
        "description" : "Id of dataset",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "Task",
        "required" : true,
        "type" : "pt.utl.ist.task.Task",
        "paramType" : "body",
        "allowMultiple" : false
      }, {
        "name" : "fullIngest",
        "description" : "true|false",
        "defaultValue" : "true",
        "required" : false,
        "type" : "boolean",
        "paramType" : "query",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 201,
        "message" : "Created (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 406,
        "message" : "MissingArgumentsException"
      }, {
        "code" : 409,
        "message" : "AlreadyExistsException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/datasets/{datasetId}/harvest/schedules",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieves the list of schedules.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "ScheduledTask"
      },
      "nickname" : "getDatasetScheduledTasks",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "datasetId",
        "description" : "Id of dataset",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing an Dataset)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/datasets/{datasetId}/harvest/schedules/{taskId}",
    "operations" : [ {
      "method" : "DELETE",
      "summary" : "Deletes an automatic harvesting.",
      "notes" : "",
      "type" : "string",
      "nickname" : "deleteScheduledTask",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "datasetId",
        "description" : "Id of dataset",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "taskId",
        "description" : "Id of task",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/datasets/harvest",
    "operations" : [ {
      "method" : "OPTIONS",
      "summary" : "Get options over harvest conext.",
      "notes" : "",
      "type" : "HarvestOptions",
      "nickname" : "getOptions",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a list of all available options)"
      } ]
    } ]
  } ],
  "models" : {
    "Option" : {
      "id" : "Option",
      "description" : "",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "syntax" : {
          "type" : "string"
        },
        "queryParameter" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "HarvestOptions" : {
      "id" : "HarvestOptions",
      "description" : "",
      "required" : [ "option" ],
      "properties" : {
        "option" : {
          "type" : "array",
          "items" : {
            "$ref" : "Option"
          }
        }
      }
    },
    "ScheduledTask" : {
      "id" : "ScheduledTask",
      "description" : "",
      "required" : [ "frequency", "time", "date" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "frequency" : {
          "type" : "string",
          "enum" : [ "ONCE", "DAILY", "WEEKLY", "XMONTHLY" ]
        },
        "xmonths" : {
          "type" : "integer",
          "format" : "int32"
        },
        "time" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string"
        }
      }
    }
  }
}