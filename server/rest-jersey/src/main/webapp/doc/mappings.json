{
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "basePath" : "http://localhost:8080/repox/rest",
  "resourcePath" : "/mappings",
  "apis" : [ {
    "path" : "/mappings",
    "operations" : [ {
      "method" : "OPTIONS",
      "summary" : "Get options over mappings conext.",
      "notes" : "",
      "type" : "MappingOptions",
      "nickname" : "getOptions",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a list of all available options)"
      } ]
    }, {
      "method" : "POST",
      "summary" : "Create a new mapping - XSL file through HTTP POST.",
      "notes" : "",
      "type" : "string",
      "nickname" : "createMapping",
      "produces" : [ "application/json", "application/xml" ],
      "consumes" : [ "multipart/mixed" ],
      "parameters" : [ {
        "name" : "body",
        "required" : false,
        "type" : "MultiPart",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 201,
        "message" : "Created (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      }, {
        "code" : 406,
        "message" : "MissingArgumentsException"
      }, {
        "code" : 409,
        "message" : "AlreadyExistsException"
      }, {
        "code" : 500,
        "message" : "InternalServerErrorException"
      } ]
    } ]
  }, {
    "path" : "/mappings/{mappingId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieves the specified mapping.",
      "notes" : "",
      "type" : "string",
      "nickname" : "getMapping",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "mappingId",
        "description" : "Id of mapping",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing an Dataset)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      } ]
    }, {
      "method" : "DELETE",
      "summary" : "Delete a mapping.",
      "notes" : "",
      "type" : "string",
      "nickname" : "deleteMapping",
      "produces" : [ "application/json", "application/xml" ],
      "parameters" : [ {
        "name" : "mappingId",
        "description" : "Id of mapping",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "OK (Response containing a String message)"
      }, {
        "code" : 404,
        "message" : "DoesNotExistException"
      } ]
    } ]
  } ],
  "models" : {
    "MultiPart" : {
      "id" : "MultiPart",
      "properties" : {
        "bodyParts" : {
          "type" : "array",
          "items" : {
            "$ref" : "BodyPart"
          }
        },
        "entity" : {
          "$ref" : "Object"
        },
        "headers" : {
          "$ref" : "javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>"
        },
        "providers" : {
          "$ref" : "Providers"
        },
        "parameterizedHeaders" : {
          "$ref" : "javax.ws.rs.core.MultivaluedMap<java.lang.String, org.glassfish.jersey.message.internal.ParameterizedHeader>"
        },
        "contentDisposition" : {
          "$ref" : "ContentDisposition"
        },
        "mediaType" : {
          "$ref" : "MediaType"
        },
        "parent" : {
          "$ref" : "MultiPart"
        },
        "messageBodyWorkers" : {
          "$ref" : "MessageBodyWorkers"
        }
      }
    },
    "MappingOptions" : {
      "id" : "MappingOptions",
      "description" : "",
      "required" : [ "option" ],
      "properties" : {
        "option" : {
          "type" : "array",
          "items" : {
            "$ref" : "Option"
          }
        }
      }
    },
    "MediaType" : {
      "id" : "MediaType",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "subtype" : {
          "type" : "string"
        },
        "parameters" : {
          "$ref" : "Map[string,string]"
        },
        "wildcardType" : {
          "type" : "boolean"
        },
        "wildcardSubtype" : {
          "type" : "boolean"
        }
      }
    },
    "Option" : {
      "id" : "Option",
      "description" : "",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "syntax" : {
          "type" : "string"
        },
        "queryParameter" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ContentDisposition" : {
      "id" : "ContentDisposition",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "parameters" : {
          "$ref" : "Map[string,string]"
        },
        "fileName" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modificationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BodyPart" : {
      "id" : "BodyPart",
      "properties" : {
        "entity" : {
          "$ref" : "Object"
        },
        "headers" : {
          "$ref" : "javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>"
        },
        "mediaType" : {
          "$ref" : "MediaType"
        },
        "parent" : {
          "$ref" : "MultiPart"
        },
        "providers" : {
          "$ref" : "Providers"
        },
        "parameterizedHeaders" : {
          "$ref" : "javax.ws.rs.core.MultivaluedMap<java.lang.String, org.glassfish.jersey.message.internal.ParameterizedHeader>"
        },
        "contentDisposition" : {
          "$ref" : "ContentDisposition"
        },
        "messageBodyWorkers" : {
          "$ref" : "MessageBodyWorkers"
        }
      }
    }
  }
}